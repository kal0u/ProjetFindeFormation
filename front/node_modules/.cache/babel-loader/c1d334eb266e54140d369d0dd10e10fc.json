{"ast":null,"code":"var _jsxFileName = \"/home/kalou/My Tuto/ProjetFindeFormation/front/src/user/pages/UpdateProfile.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\"; //useParams to get the actual activity ID which is part of the url, and store it in a constant\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElement/Card\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_MAXLENGTH } from \"../../shared/utils/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./ProfileForm.css\";\n\nconst UpdateProfile = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedUser, setLoadeduser] = useState();\n  const userId = useParams().userId;\n  const history = useHistory();\n  const [formState, inputHandler, setFormData] = useForm({\n    login: {\n      value: \"\",\n      isValid: false\n    },\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchUserToUpdate = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/users/profile/${userId}`);\n        setLoadeduser(responseData.user);\n        setFormData({\n          login: {\n            value: responseData.user.login,\n            isValid: true\n          },\n          email: {\n            value: responseData.user.email,\n            isValid: true\n          },\n          password: {\n            value: responseData.user.password,\n            isValid: true\n          }\n        }, true);\n      } catch (err) {}\n    };\n\n    fetchUserToUpdate();\n  }, [sendRequest, userId, setFormData]);\n\n  const UserUpdateSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest(`http://localhost:5000/api/users/profile/edit/${userId}`, \"PATCH\", JSON.stringify({\n        login: formState.inputs.login.value,\n        email: formState.inputs.email.value,\n        password: formState.inputs.password.value\n      }), {\n        \"Content-Type\": \"application/json\",\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push(\"/\" + auth.userId + \"/profile\");\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (!loadedUser && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Could not find activity\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), !isLoading && loadedUser && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: UserUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"login\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Login\",\n    validators: [VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(20)],\n    errorText: \"Please enter a valid login (between 6 and 20 characters).\",\n    onInput: inputHandler,\n    initialValue: loadedUser.login,\n    initialValid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    label: \"Email\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email adress.\",\n    onInput: inputHandler,\n    initialValue: loadedUser.email,\n    initialValid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(30)],\n    errorText: \"Please enter a valid password (between 6 and 30 characters).\",\n    onInput: inputHandler,\n    initialValue: loadedUser.password,\n    initialValid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"UPDATE PROFILE\")));\n};\n\nexport default UpdateProfile;","map":{"version":3,"sources":["/home/kalou/My Tuto/ProjetFindeFormation/front/src/user/pages/UpdateProfile.js"],"names":["React","useEffect","useState","useContext","useParams","useHistory","Input","Button","Card","ErrorModal","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_MAXLENGTH","useForm","useHttpClient","AuthContext","UpdateProfile","auth","isLoading","error","sendRequest","clearError","loadedUser","setLoadeduser","userId","history","formState","inputHandler","setFormData","login","value","isValid","email","password","fetchUserToUpdate","responseData","user","err","UserUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\"; //useParams to get the actual activity ID which is part of the url, and store it in a constant\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElement/Card\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_MAXLENGTH\n} from \"../../shared/utils/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nimport \"./ProfileForm.css\";\n\nconst UpdateProfile = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient(); \n  const [loadedUser, setLoadeduser] = useState();\n  const userId = useParams().userId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      login: {\n        value: \"\",\n        isValid: false,\n      },\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchUserToUpdate = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:5000/api/users/profile/${userId}`\n        );\n\n        setLoadeduser(responseData.user);\n        setFormData(\n          {\n            login: {\n              value: responseData.user.login,\n              isValid: true,\n            },\n            email: {\n              value: responseData.user.email,\n              isValid: true,\n            },\n            password: {\n              value: responseData.user.password,\n              isValid: true,\n            }\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchUserToUpdate();\n  }, [sendRequest, userId, setFormData]);\n\n  const UserUpdateSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `http://localhost:5000/api/users/profile/edit/${userId}`,\n        \"PATCH\",\n        JSON.stringify({\n          login: formState.inputs.login.value,\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }),\n        { \"Content-Type\": \"application/json\", Authorization: 'Bearer ' + auth.token }\n      );\n      history.push(\"/\" + auth.userId + \"/profile\");\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedUser && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find activity</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedUser && (\n        <form className=\"place-form\" onSubmit={UserUpdateSubmitHandler}>\n          <Input\n            id=\"login\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Login\"\n            validators={[VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(20)]}\n            errorText=\"Please enter a valid login (between 6 and 20 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedUser.login}\n            initialValid={true}\n          />\n          <Input\n            id=\"email\"\n            element=\"input\"\n            label=\"Email\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email adress.\"\n            onInput={inputHandler}\n            initialValue={loadedUser.email}\n            initialValid={true}\n          />\n          <Input\n            id=\"password\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(30)]}\n            errorText=\"Please enter a valid password (between 6 and 30 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedUser.password}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PROFILE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateProfile;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kalou/My Tuto/ProjetFindeFormation/front/src/user/pages/Login.js\";\nimport React, { useState, useContext } from \"react\";\nimport \"./Authentication.css\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElement/Card\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_MAXLENGTH } from \"../../shared/utils/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst Login = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient(); //_____________\n\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const loginSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(\"http://localhost:5000/api/users/login\", \"POST\", JSON.stringify({\n        email: formState.inputs.email.value,\n        password: formState.inputs.password.value\n      }), {\n        \"Content-Type\": \"application/json\"\n      });\n      auth.login(responseData.userId, responseData.token);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Login Page\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: loginSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"email\",\n    label: \"Email\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email adress.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(30)],\n    errorText: \"Please enter a valid password (between 6 and 30 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"LOGIN\")), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"SWITCH TO REGISTER\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/kalou/My Tuto/ProjetFindeFormation/front/src/user/pages/Login.js"],"names":["React","useState","useContext","Input","Button","Card","ErrorModal","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_MAXLENGTH","useForm","useHttpClient","AuthContext","Login","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","email","value","isValid","password","loginSubmitHandler","event","preventDefault","responseData","JSON","stringify","inputs","login","userId","token","err"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport \"./Authentication.css\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElement/Card\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\n\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_MAXLENGTH,\n} from \"../../shared/utils/validators\";\n\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst Login = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient(); //_____________\n\n  const [formState, inputHandler] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const loginSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const responseData = await sendRequest(\n        \"http://localhost:5000/api/users/login\",\n        \"POST\",\n        JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n        }\n      );\n      auth.login(responseData.userId, responseData.token);\n    } catch (err) {\n\n    }\n  };\n\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Page</h2>\n        <hr />\n        <form onSubmit={loginSubmitHandler}>\n          <Input\n            id=\"email\"\n            element=\"input\"\n            type=\"email\"\n            label=\"Email\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email adress.\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"password\"\n            element=\"input\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(30)]}\n            errorText=\"Please enter a valid password (between 6 and 30 characters).\"\n            onInput={inputHandler}\n          />\n\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            LOGIN\n        </Button>\n        </form>\n        <Button inverse to=\"/register\">\n          SWITCH TO REGISTER\n      </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
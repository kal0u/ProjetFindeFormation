{"ast":null,"code":"var _jsxFileName = \"/home/kalou/My Tuto/ProjetFindeFormation/front/src/user/pages/Register.js\";\nimport React, { useState, useContext } from \"react\";\nimport \"./Authentication.css\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElement/Card\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_MAXLENGTH, VALIDATOR_PASSWORD } from \"../../shared/utils/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst Register = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    login: {\n      value: \"\",\n      isValid: false\n    },\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    },\n    password2: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const registrationSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(\"http://localhost:5000/api/users/register\", \"POST\", JSON.stringify({\n        login: formState.inputs.login.value,\n        email: formState.inputs.email.value,\n        password: formState.inputs.password.value,\n        password2: formState.inputs.password2.value\n      }), {\n        \"Content-Type\": \"application/json\"\n      });\n      auth.login(responseData.userId, responseData.token);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Register Page\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: registrationSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"login\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Login\",\n    validators: [VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(20)],\n    errorText: \"Please enter a valid login (between 6 and 20 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"email\",\n    label: \"Email\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email adress.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(30)],\n    errorText: \"Please enter a valid password (between 6 and 30 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password2\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Confirm password\",\n    validators: [VALIDATOR_PASSWORD(formState.inputs.password.value)],\n    errorText: \"The passwords does not match.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"REGISTER\")), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"SWITCH TO LOGIN\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/kalou/My Tuto/ProjetFindeFormation/front/src/user/pages/Register.js"],"names":["React","useState","useContext","Input","Button","Card","ErrorModal","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_MAXLENGTH","VALIDATOR_PASSWORD","useForm","useHttpClient","AuthContext","Register","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","login","value","isValid","email","password","password2","registrationSubmitHandler","event","preventDefault","responseData","JSON","stringify","inputs","userId","token","err"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport \"./Authentication.css\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElement/Card\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\n\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_MAXLENGTH,\n  VALIDATOR_PASSWORD,\n} from \"../../shared/utils/validators\";\n\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst Register = () => {\n  const auth = useContext(AuthContext);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient(); \n\n  const [formState, inputHandler] = useForm(\n    {\n      login: {\n        value: \"\",\n        isValid: false,\n      },\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n      password2: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n\n  const registrationSubmitHandler = async (event) => {\n    event.preventDefault();\n\ntry{\n  const responseData = await sendRequest(\n        \"http://localhost:5000/api/users/register\",\n        \"POST\",\n        JSON.stringify({\n          login: formState.inputs.login.value,\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value,\n          password2: formState.inputs.password2.value,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n        }\n      );\n      auth.login(responseData.userId, responseData.token);\n} catch (err) {\n\n}\n       \n  };\n\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Register Page</h2>\n        <hr />\n        <form onSubmit={registrationSubmitHandler}>\n          <Input\n            id=\"login\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Login\"\n            validators={[VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(20)]}\n            errorText=\"Please enter a valid login (between 6 and 20 characters).\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"email\"\n            element=\"input\"\n            type=\"email\"\n            label=\"Email\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email adress.\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"password\"\n            element=\"input\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(30)]}\n            errorText=\"Please enter a valid password (between 6 and 30 characters).\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"password2\"\n            element=\"input\"\n            type=\"password\"\n            label=\"Confirm password\"\n            validators={[VALIDATOR_PASSWORD(formState.inputs.password.value)]}\n            errorText=\"The passwords does not match.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            REGISTER\n          </Button>\n        </form>\n        <Button inverse to=\"/login\">\n          SWITCH TO LOGIN\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}
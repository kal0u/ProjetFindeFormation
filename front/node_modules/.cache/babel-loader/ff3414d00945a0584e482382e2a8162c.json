{"ast":null,"code":"var _jsxFileName = \"/home/kalou/My Tuto/ProjetFindeFormation/front/src/activities/pages/NewActivity.js\";\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/utils/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./ActivityForm.css\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst NewActivity = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient(); //_____________\n  //setFormData not added here because not needed\n\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    },\n    date: {\n      value: \"\",\n      isValid: false\n    },\n    location: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  const history = useHistory(); //hook to redirect (push method, replace method)\n\n  console.log(auth.userId);\n\n  const activitySubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest('http://localhost:5000/api/activity', 'POST', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value,\n        date: formState.inputs.date.value,\n        location: formState.inputs.location.value,\n        creator: auth.userId\n      }), {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/'); //Redirect user to starting page\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: activitySubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"location\",\n    element: \"input\",\n    label: \"Location\",\n    validators: [VALIDATOR_MINLENGTH(3)],\n    errorText: \"Please enter a valid location (at least 3 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"date\",\n    element: \"input\",\n    label: \"Date\",\n    validators: [VALIDATOR_MINLENGTH(10)] //------------61------------- A VOIR AVEC EMAIL VALIDATOR !!!!!!!\n    ,\n    errorText: \"Please enter a valid date (format dd/mm/yyyy).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"ADD ACTIVITY\")));\n};\n\nexport default NewActivity;","map":{"version":3,"sources":["/home/kalou/My Tuto/ProjetFindeFormation/front/src/activities/pages/NewActivity.js"],"names":["React","useContext","useHistory","Input","Button","ErrorModal","LoadingSpinner","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","AuthContext","NewActivity","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","title","value","isValid","description","date","location","history","console","log","userId","activitySubmitHandler","event","preventDefault","JSON","stringify","inputs","creator","Authorization","token","push","err"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/utils/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./ActivityForm.css\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst NewActivity = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient(); //_____________\n\n  //setFormData not added here because not needed\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      date: {\n        value: \"\",\n        isValid: false,\n      },\n      location: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const history = useHistory(); //hook to redirect (push method, replace method)\n  console.log(auth.userId);\n\n    const activitySubmitHandler = async (event) => {\n      event.preventDefault();\n      try {\n        await sendRequest('http://localhost:5000/api/activity', 'POST', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value,\n        date: formState.inputs.date.value,\n        location: formState.inputs.location.value,\n        creator: auth.userId\n      }),\n      {'Content-Type': 'application/json', Authorization: 'Bearer ' + auth.token}\n      );\n      history.push('/'); //Redirect user to starting page\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={activitySubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"location\"\n          element=\"input\"\n          label=\"Location\"\n          validators={[VALIDATOR_MINLENGTH(3)]}\n          errorText=\"Please enter a valid location (at least 3 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"date\"\n          element=\"input\"\n          label=\"Date\"\n          validators={[VALIDATOR_MINLENGTH(10)]} //------------61------------- A VOIR AVEC EMAIL VALIDATOR !!!!!!!\n          errorText=\"Please enter a valid date (format dd/mm/yyyy).\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD ACTIVITY\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewActivity;\n"]},"metadata":{},"sourceType":"module"}